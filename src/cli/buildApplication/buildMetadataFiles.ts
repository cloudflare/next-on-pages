import { join } from 'path';
import { writeFile } from 'fs/promises';
import { nextOnPagesVersion } from '../utils';

/**
 * Builds metadata files needed for the worker to correctly run.
 */
export async function buildMetadataFiles() {
	await Promise.all([buildHeaders(), buildRoutes()]);
}

async function buildHeaders() {
	await writeFile(
		join('.vercel', 'output', 'static', '_headers'),
		`
# === START AUTOGENERATED @cloudflare/next-on-pages IMMUTABLE HEADERS ===
/_next/static/*
  Cache-Control: public,max-age=31536000,immutable
# === END AUTOGENERATED @cloudflare/next-on-pages IMMUTABLE HEADERS ===\n`,
		{
			// in case someone configured redirects already, append to the end
			flag: 'a',
		}
	);
}

async function buildRoutes() {
	try {
		await writeFile(
			join('.vercel', 'output', 'static', '_routes.json'),
			JSON.stringify({
				version: 1,
				description: `Built with @cloudflare/next-on-pages@${nextOnPagesVersion}.`,
				include: ['/*'],
				exclude: ['/_next/static/*'],
			}),
			{ flag: 'ax' } // don't generate file if it's already manually maintained
		);
	} catch (e) {
		if ((e as { code?: string }).code !== 'EEXIST') {
			throw e;
		}
	}
}
