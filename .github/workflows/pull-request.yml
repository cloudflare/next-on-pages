name: Pull request checks

on:
  pull_request:
  push:
    branches:
      - main

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Cache turbo
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ./turbo-cache
          key: cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}

      - name: Check formatting
        run: npm run prettier:check -- --cache-dir ./turbo-cache
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock.
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Cache turbo
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ./turbo-cache
          key: cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}

      - name: Check linting
        run: npm run lint -- --cache-dir ./turbo-cache
  types:
    name: Types
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock.
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Cache turbo
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ./turbo-cache
          key: cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}

      - name: Check types
        run: npm run types-check -- --cache-dir ./turbo-cache
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock.
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Cache turbo
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ./turbo-cache
          key: cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}

      - name: Build
        run: npm run build -- --cache-dir ./turbo-cache
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock.
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Cache turbo
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ./turbo-cache
          key: cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-${{ github.sha }}
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-${{ github.ref_name }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}-${{ github.base_ref }}-
            cache-turbo-${{ github.workflow }}-${{ github.job }}

      - name: Run unit tests
        run: npm run test:unit -- --cache-dir ./turbo-cache
  e2e-tests:
    name: e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x

      - name: Get current node version
        id: node-version
        run: |
          node_version=$(node -v)
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

        # Attempt to cache all the node_modules directories based on the node version and package lock.
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ steps.node-version.outputs.node_version }}
        with:
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules
            !/pages-e2e/workspaces/**/node_modules

      # If the cache missed then install using `npm ci` to follow package lock exactly
      - if: ${{ steps.npm-cache.outputs.cache-hit != 'true'}}
        name: Install NPM Dependencies
        run: npm ci

      - name: Run e2e tests
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 20
          command: npm run test:e2e -- -- --log-timestamp
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ vars.PROJECT_NAME }}
