name: Configs docs scraping
on:
  schedule:
    - cron: '0 0,12 * * *'

jobs:
  check_docs:
    name: Check if our docs are up to date
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.run-checker.outputs.result }}
      undocumented_next_configs: ${{ steps.run-checker.outputs.undocumented_next_configs }}
      documented_non_next_configs: ${{ steps.run-checker.outputs.documented_non_next_configs }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: npm ci
      - name: Run Checker
        id: run-checker
        working-directory: internal-packages/docs-scraper
        run: |
          output=$(GH_ACTION=true npm run check-docs)

          result=$(echo "$output" | grep -E "__gh_output__result=")
          result_value="${result#*=}"
          echo "result=$result_value" >> $GITHUB_OUTPUT

          undocumented_next_configs=$(echo "$output" | grep -E "__gh_output__undocumented_next_configs=")
          undocumented_next_configs_value="${undocumented_next_configs#*=}"
          echo "undocumented_next_configs=$undocumented_next_configs_value" >> $GITHUB_OUTPUT

          documented_non_next_configs=$(echo "$output" | grep -E "__gh_output__documented_non_next_configs=")
          documented_non_next_configs_value="${documented_non_next_configs#*=}"
          echo "documented_non_next_configs=$documented_non_next_configs_value" >> $GITHUB_OUTPUT
      - name: Check result
        run: |
          if [[ "${{ steps.run-checker.outputs.result }}" = "no-next-configs-detected" ]]
          then
            echo "ERROR! No next configs were detected, the next docs might have changed!"
            exit 1
          elif [[ "${{ steps.run-checker.outputs.result }}" = "no-next-configs-detected" ]]
          then
            echo "ERROR! No next-on-pages configs were detected, the docs might have changed!"
            exit 1
          elif [[ "${{ steps.run-checker.outputs.result }}" = "no-next-configs-detected" ]]
          then
            echo "The next-on-pages documentation is up to date"
          else
            echo "The next-on-pages documentation is out of date"
          fi

  generate-configs-table:
    name: Generate configs table
    needs: check_docs
    if: needs.check_docs.outputs.result == 'out-of-date'
    runs-on: ubuntu-latest
    outputs:
      table: ${{ steps.run-checker.outputs.table }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: npm ci
      - name: Run Checker
        id: run-checker
        working-directory: internal-packages/docs-scraper
        run: |
          output=$(GH_ACTION=true npm run generate-configs-table)

          table=$(echo "$output" | grep -E '^\|.*' )
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "table<<$EOF" >> $GITHUB_OUTPUT
          echo "$table" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

  create_or_update_issue:
    name: Create or Update Issue
    needs: [check_docs, generate-configs-table]
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Update Issue
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          undocumentedNextConfigs: ${{ needs.check_docs.outputs.undocumented_next_configs }}
          documentedNonNextConfigs: ${{ needs.check_docs.outputs.documented_non_next_configs }}
          configsTable: ${{ needs.generate-configs-table.outputs.table }}
        with:
          script: |
            const label = 'outdated-config-docs';

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: label,
              sort: 'created',
              direction: 'desc',
              per_page: 1,
            });

            if (issues.length > 1) {
              console.log('Only one issue should be present, abort');
              throw new Error('Only one test-issue should be present');
            }

            const undocumentedNextConfigs = process.env.undocumentedNextConfigs.split(',');
            const documentedNonNextConfigs = process.env.documentedNonNextConfigs.split(',');

            let issueBody =
              '### The next-on-pages documentation of the next.config.js options is out of date\n';

            if(undocumentedNextConfigs.length > 0) {
              issueBody += '\n\nThe following next.config.js configs are not documented in our supported doc:\n';
              issueBody += undocumentedNextConfigs.map((config) => `- ${config}`).join('\n');
            }

            if(documentedNonNextConfigs.length > 0) {
              issueBody += '\n\nThe following configs present in our supported doc are not present in the next.config.js documentation pages:\n';
              issueBody += documentedNonNextConfigs.map((config) => `- ${config}`).join('\n');
            }

            issueBody += '\n\n___\n\n'

            issueBody += '\n> **Warning**\n'
            issueBody += '> Remember to update:\n'
            issueBody += '> - [The supported doc](https://github.com/cloudflare/next-on-pages/blob/main/packages/next-on-pages/docs/supported.md#nextconfigjs-properties)\n'
            issueBody += '> - [The eslint-plugin-next-on-pages no-unsupported rule](https://github.com/cloudflare/next-on-pages/blob/main/packages/eslint-plugin-next-on-pages/src/rules/no-unsupported-configs.ts)\n'

            issueBody += '\n\n___\n\n'

            issueBody += '\n<details>\n'
            issueBody += '<summary>Configs table template</summary>\n\n'
            issueBody += 'Template config table that you can use to update the supported doc:\n\n'
            issueBody += process.env.configsTable;
            issueBody += '\n\n</details>\n\n'

            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: [label],
                title: "‚ö†Ô∏èüìÑ The `next.config.js` supported doc is out of date üìÑ‚ö†Ô∏è",
                body: issueBody,
              });
            } else {
              const issueNumber = issues[0].number;

              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: issueBody,
              });
            }
