diff --git a/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/run-test.ts b/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/run-test.ts
index 1424a14..10d43fa 100644
--- a/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/run-test.ts
+++ b/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/run-test.ts
@@ -119,39 +119,81 @@ This is going to be evaluated on ${environment}, using ${TRIGGER} as the trigger
 		});
 	}
 
-	const deployedFixtures = Object.fromEntries(
-		await Promise.all(
-			fixtures.map(async (fixture) => {
-				const fixtureLogger = Logger.from({
-					logger,
-					label: `[${fixture}]`,
-				});
-				const { directory, config: fixtureConfig } = await setUpFixture({
-					timestamp: startTimestamp,
-					logger: fixtureLogger,
-					fixture,
-				});
-				const { config: featuresConfig } = await setUpFeatures({
-					logger: fixtureLogger,
-					fixture,
-					features: fixtureConfig.features,
-					directory,
-				});
-				const { url } = await createDeployment({
-					timestamp: startTimestamp,
-					environment,
-					trigger,
-					logger: fixtureLogger,
-					teardownService,
-					fixture,
-					fixtureConfig,
-					featuresConfig,
-					directory,
-				});
-				return [fixture, { url, features: fixtureConfig.features }];
-			}) as Promise<[string, { url: string; features: Feature[] }]>[]
-		)
-	);
+	let deployedFixtures: {
+		[k: string]: {
+			url: string;
+			features: Feature[];
+		};
+	} = {};
+	if(environment !== Environment.Local) {
+		deployedFixtures = Object.fromEntries(
+			await Promise.all(
+				fixtures.map(async (fixture, idx) => {
+					const fixtureLogger = Logger.from({
+						logger,
+						label: `[${fixture}]`,
+					});
+					const { directory, config: fixtureConfig } = await setUpFixture({
+						timestamp: startTimestamp,
+						logger: fixtureLogger,
+						fixture,
+					});
+					const { config: featuresConfig } = await setUpFeatures({
+						logger: fixtureLogger,
+						fixture,
+						features: fixtureConfig.features,
+						directory,
+					});
+
+					const { url } = await createDeployment({
+						timestamp: startTimestamp,
+						environment,
+						trigger,
+						logger: fixtureLogger,
+						teardownService,
+						fixture,
+						fixtureConfig,
+						featuresConfig,
+						directory,
+					});
+					return [fixture, { url, features: fixtureConfig.features }];
+				}) as Promise<[string, { url: string; features: Feature[] }]>[]
+			)
+		);
+	} else {
+		console.log('___⚠️⚠️⚠️ Detected local environment so all deployments are going to be performed sequentially ⚠️⚠️⚠️___');
+
+		for(const fixture of fixtures) {
+			const fixtureLogger = Logger.from({
+				logger,
+				label: `[${fixture}]`,
+			});
+			const { directory, config: fixtureConfig } = await setUpFixture({
+				timestamp: startTimestamp,
+				logger: fixtureLogger,
+				fixture,
+			});
+			const { config: featuresConfig } = await setUpFeatures({
+				logger: fixtureLogger,
+				fixture,
+				features: fixtureConfig.features,
+				directory,
+			});
+
+			const { url } = await createDeployment({
+				timestamp: startTimestamp,
+				environment,
+				trigger,
+				logger: fixtureLogger,
+				teardownService,
+				fixture,
+				fixtureConfig,
+				featuresConfig,
+				directory,
+			});
+			deployedFixtures[fixture] = { url, features: fixtureConfig.features };
+		}
+	}
 
 	const testResults = await runTests({
 		logger,
diff --git a/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/src/wranglerPagesDev.ts b/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/src/wranglerPagesDev.ts
index 662230c..05017e0 100644
--- a/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/src/wranglerPagesDev.ts
+++ b/node_modules/@cfpreview/pages-e2e-test-runner-cli/scripts/src/wranglerPagesDev.ts
@@ -39,7 +39,7 @@ export const wranglerPagesDev = async ({
 	teardownService.register({
 		name: `'wrangler pages dev' running in ${rootDirectory}`,
 		function: () => {
-			wranglerProcess.kill("SIGTERM");
+			wranglerProcess.kill("SIGKILL");
 		},
 	});
 
@@ -61,7 +61,7 @@ export const wranglerPagesDev = async ({
 				logger.error(
 					"Error: Wrangler failed to start the dev server, aborting!"
 				);
-				wranglerProcess.kill();
+				wranglerProcess.kill("SIGKILL");
 			}
 		}
 	});
